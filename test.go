package main

import (
	"database/sql"
	"db_mirror/db"
	"fmt"
	"io/ioutil"
	"net/http"
	"strings"
)

type AutoGenerated struct {
	Age   int    `json:"age"`
	Name  string `json:"name"`
	Child []int  `json:"child"`
}

func m2ain() {
	h := db.NewHandlerDb(5)

	r, err := h.Engine.DB().Query("select * from NEIKONG_AUVGO_STATEMENT_INFO")
	if err != nil {
		fmt.Println(err)
	}
	m := make(map[string]interface{})
	if r.Next() {
		err := MakeRowToMap(r.Rows, m)
		fmt.Println(err)
		fmt.Println(m)
	}

}

func MakeRowToMap(r *sql.Rows, m map[string]interface{}) error {

	clos, err1 := r.Columns()
	if err1 != nil {
		return err1
	}

	vv := make([]interface{}, len(clos))
	for i, _ := range vv {
		var a interface{}
		vv[i] = &a
	}
	err2 := r.Scan(vv...)
	if err2 != nil {
		return err2
	}
	for i, v := range clos {
		m[v] = *vv[i].(*interface{})
	}

	return nil

}

func ma3in() {

	v := `{
    "name":"114.115.146.150_差旅正式_SZHTCL",
    "ip":"114.115.146.150",
    "port":"1521",
    "service_name":"orcl",
    "username":"SZHTCL",
    "password":"SZHTCL"
}`

	resp, err := http.Post("http://122.9.41.215:8080/v1/setting/test_db", "application/json", strings.NewReader(v))
	if err != nil {
		fmt.Println(err)
	}
	defer resp.Body.Close()
	a, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		fmt.Println(err)

	}
	fmt.Println(string(a))

}
